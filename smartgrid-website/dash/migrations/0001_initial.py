# Generated by Django 2.1.1 on 2019-01-03 20:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aggregator',
            fields=[
                ('aggregator_id', models.CharField(max_length=25)),
                ('full_name', models.CharField(default='full_name', max_length=51, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('data_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.FloatField()),
                ('voltage_a', models.FloatField()),
                ('voltage_a_units', models.CharField(default='kWh', max_length=3)),
                ('voltage_b', models.FloatField()),
                ('voltage_b_units', models.CharField(default='kWh', max_length=3)),
                ('voltage_c', models.FloatField()),
                ('voltage_c_units', models.CharField(default='kWh', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('day', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Hour',
            fields=[
                ('hour', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('house_id', models.CharField(max_length=25)),
                ('full_name', models.CharField(default='full_name', max_length=106, primary_key=True, serialize=False)),
                ('aggregator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Aggregator')),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('month', models.CharField(max_length=2, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('neighborhood_id', models.CharField(max_length=25)),
                ('full_name', models.CharField(default='full_name', max_length=78, primary_key=True, serialize=False)),
                ('aggregator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Aggregator')),
            ],
        ),
        migrations.CreateModel(
            name='PowerSystemReading',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('house', models.IntegerField()),
                ('neighborhood', models.IntegerField()),
                ('aggregator', models.IntegerField()),
                ('region', models.IntegerField()),
                ('year', models.CharField(default='2018', max_length=4)),
                ('season', models.CharField(default='Winter', max_length=6)),
                ('week', models.CharField(default='01', max_length=2)),
                ('day', models.CharField(default='Monday', max_length=9)),
                ('hour', models.CharField(default='00', max_length=2)),
                ('power_system', models.CharField(default='1', max_length=5)),
                ('load_feeder', models.CharField(default='1', max_length=5)),
                ('weekly_peak_load_percentage', models.FloatField()),
                ('daily_peak_load_percentage', models.FloatField()),
                ('hourly_peak_load_percentage', models.FloatField()),
                ('active_power', models.IntegerField()),
                ('reactive_power', models.IntegerField()),
                ('apparent_power', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('reading_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.CharField(default='2018', max_length=4, null=True)),
                ('month', models.CharField(default='01', max_length=2, null=True)),
                ('day', models.CharField(default='01', max_length=2, null=True)),
                ('hour', models.CharField(default='00', max_length=2, null=True)),
                ('minute', models.CharField(default='00', max_length=2, null=True)),
                ('second', models.CharField(default='00', max_length=2, null=True)),
                ('consumption', models.BigIntegerField()),
                ('consumption_units', models.CharField(default='kWh', max_length=3)),
                ('temperature', models.IntegerField(null=True)),
                ('temperature_units', models.CharField(default='F', max_length=1, null=True)),
                ('cost', models.BigIntegerField(null=True)),
                ('currency', models.CharField(default='USD', max_length=3, null=True)),
                ('aggregator_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.Aggregator')),
                ('house_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.House')),
                ('neighborhood_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dash.Neighborhood')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region_id', models.CharField(max_length=25)),
                ('full_name', models.CharField(default='full_name', max_length=25, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('year', models.CharField(max_length=4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.AddField(
            model_name='reading',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='powersystemreading',
            unique_together={('id', 'year', 'season', 'week', 'day', 'hour', 'house', 'neighborhood', 'aggregator', 'region', 'power_system', 'load_feeder', 'active_power', 'reactive_power', 'apparent_power')},
        ),
        migrations.AddField(
            model_name='neighborhood',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Region'),
        ),
        migrations.AddField(
            model_name='house',
            name='neighborhood_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Neighborhood'),
        ),
        migrations.AddField(
            model_name='house',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='data',
            unique_together={('data_id', 'timestamp', 'voltage_a', 'voltage_a_units', 'voltage_b', 'voltage_b_units', 'voltage_c', 'voltage_c_units')},
        ),
        migrations.AddField(
            model_name='aggregator',
            name='region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dash.Region'),
        ),
        migrations.AlterUniqueTogether(
            name='reading',
            unique_together={('year', 'month', 'day', 'hour', 'minute', 'second'), ('reading_id', 'year', 'month', 'day', 'hour', 'minute', 'second', 'house_id', 'neighborhood_id', 'aggregator_id', 'region_id', 'consumption', 'temperature', 'cost')},
        ),
        migrations.AlterUniqueTogether(
            name='neighborhood',
            unique_together={('neighborhood_id', 'aggregator_id', 'region_id')},
        ),
        migrations.AlterUniqueTogether(
            name='house',
            unique_together={('house_id', 'neighborhood_id', 'aggregator_id', 'region_id')},
        ),
        migrations.AlterUniqueTogether(
            name='aggregator',
            unique_together={('aggregator_id', 'region_id')},
        ),
    ]
